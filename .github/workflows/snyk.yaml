name: Snyk Security

on:
  push:
    branches: ["main" ]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  snyk:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Snyk CLI to check for security issues
        # Snyk can be used to break the build when it detects security issues.
        # In this case we want to upload the SAST issues to GitHub Code Scanning
        uses: snyk/actions/setup@806182742461562b67788a64410098c9d9b96adb

        # For Snyk Open Source you must first set up the development environment for your application's dependencies
        # For example for Node
        #- uses: actions/setup-node@v3
        #  with:
        #    node-version: 16

        #env:
          # This is where you will need to introduce the Snyk API token created with your Snyk account
      - name: Authenticate snyk
        run: npx snyk auth 9fb45c56-8878-4374-9de4-8b45f593c1c3

        #Runs Snyk Code (SAST) analysis and uploads result into GitHub.
        #Use || true to not fail the pipeline
      - name: Snyk Code test
        #run: snyk code test  --org=14e7bbc1-feba-4f59-b6dd-27d78c5eb73b --target-name='vulner' --report='vulner'|| true
        run: snyk code test || true

        #Runs Snyk Open Source (SCA) analysis and uploads result to Snyk.
      - name: Snyk Open Source monitor
        run: snyk monitor --all-projects
        #run: snyk monitor --org=14e7bbc1-feba-4f59-b6dd-27d78c5eb73b --target-name='vulner' --report='vulner'|| true

        #Runs Snyk Infrastructure as Code (IaC) analysis and uploads result to Snyk.
        #Use || true to not fail the pipeline.
      - name: Snyk IaC test and report
        run: snyk iac test --report || true

        # Build the docker image for testing
      - name: Build a Docker image
        run: docker build -t your/image-to-test .
      #   # Runs Snyk Container (Container and SCA) analysis and uploads result to Snyk.
      - name: Snyk Container monitor
        run: snyk container monitor node:10.4.0 --file=Dockerfile --report='vulner'|| true

     
